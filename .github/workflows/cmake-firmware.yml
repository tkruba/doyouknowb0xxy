name: CMake Firmware

on:
  push:
  pull_request:
    types: [opened, edited, closed, reopened]

env:
  PICO_SDK_DIR: pico-sdk
  FIRMWARE_ARTIFACT_PATH: ./build/

concurrency:
  group: ${{ github.head_ref || github.run_id || github.event.number }}
  cancel-in-progress: true

jobs:
  build-firmware:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        submodules: recursive

    - name: Checkout Pico SDK
      uses: actions/checkout@v4
      with:
        repository: raspberrypi/pico-sdk
        path: ${{ env.PICO_SDK_DIR }}
        submodules: recursive

    - name: Verify Pico SDK Checkout
      run: |
        if (Test-Path ${{ env.PICO_SDK_DIR }}) {
          Write-Output "Pico SDK directory exists"
          dir ${{ env.PICO_SDK_DIR }} -Recurse
        } else {
          Write-Error "Pico SDK directory does not exist"
          exit 1
        }
      shell: powershell
      working-directory: ${{ github.workspace }}

    - name: Cache Pico SDK and dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.PICO_SDK_DIR }}
          C:\ProgramData\Chocolatey
        key: ${{ runner.os }}-pico-sdk-${{ hashFiles('**/pico-sdk/**') }}
        restore-keys: ${{ runner.os }}-pico-sdk-

    - name: Install dependencies (Windows)
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --fail-on-error
        choco install python --version=3.12.6 --fail-on-error
        choco install ninja --fail-on-error
        choco install git --fail-on-error
        choco install gcc-arm-embedded --fail-on-error
      shell: powershell

    - name: Verify CMakeLists.txt structure
      run: |
        Select-String -Path CMakeLists.txt -Pattern "cmake_minimum_required|project\(|pico_sdk_init" | ForEach-Object { $_.Line } | Write-Output
        Write-Output "Expected order: cmake_minimum_required, project, include(pico_sdk_init.cmake), pico_sdk_init"
      shell: powershell
      working-directory: ${{ github.workspace }}

    - name: Set PICO_SDK_PATH in CMakeLists.txt
      run: |
        (Get-Content CMakeLists.txt) -replace '#set\(PICO_SDK_PATH.*', 'set(PICO_SDK_PATH "${{ github.workspace }}/${{ env.PICO_SDK_DIR }}")' | Set-Content CMakeLists.txt
        Get-Content CMakeLists.txt
      shell: powershell
      working-directory: ${{ github.workspace }}

    - name: Verify toolchain (Windows)
      run: |
        $env:Path += ";C:\ProgramData\Chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10.3-2021.10\bin;C:\ProgramData\Chocolatey\bin"
        arm-none-eabi-gcc --version
        arm-none-eabi-objdump --version
        ninja --version
        cmake --version
      shell: powershell

    - name: Verify Toolchain File
      run: |
        $toolchainFile = "${{ github.workspace }}/${{ env.PICO_SDK_DIR }}/pico_sdk_tools.cmake"
        if (Test-Path $toolchainFile) {
          Write-Output "Toolchain file found: $toolchainFile"
        } else {
          Write-Error "Toolchain file not found: $toolchainFile"
          exit 1
        }
      shell: powershell

    - name: Create Build Environment
      run: |
        Remove-Item -Path ${{ github.workspace }}/build -Recurse -Force -ErrorAction SilentlyContinue
        New-Item -Path ${{ github.workspace }}/build -ItemType Directory -Force
      shell: powershell

    - name: Verify Build Directory
      run: |
        if (Test-Path ${{ github.workspace }}/build) {
          Write-Output "Build directory exists"
          dir ${{ github.workspace }}/build -Recurse
        } else {
          Write-Error "Build directory does not exist"
          exit 1
        }
      shell: powershell

    - name: Configure CMake
      working-directory: ${{ github.workspace }}/build
      run: |
        cmake .. -G Ninja -DPICO_BOARD=pico -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/${{ env.PICO_SDK_DIR }}/pico_sdk_tools.cmake
      shell: powershell
      env:
        PICO_SDK_PATH: ${{ github.workspace }}/${{ env.PICO_SDK_DIR }}

    - name: Verify CMake Generator
      working-directory: ${{ github.workspace }}/build
      run: |
        cmake -L | findstr "CMAKE_GENERATOR"
        dir CMakeFiles | findstr "cmake"
      shell: powershell

    - name: Build Firmware
      working-directory: ${{ github.workspace }}/build
      run: |
        cmake --build . --parallel
      shell: powershell

    - name: List Build Artifacts (Post-Build)
      working-directory: ${{ github.workspace }}/build
      run: dir -Recurse
      shell: powershell

    - name: Check Boot Stage 2 Output
      working-directory: ${{ github.workspace }}/build/pico-sdk/src/rp2040/boot_stage2
      run: dir -Recurse
      shell: powershell
      continue-on-error: true

    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: pico_rectangle_${{ github.sha }}.uf2
        path: ${{ github.workspace }}/build/pico_rectangle.uf2
        if-no-files-found: error
        retention-days: 30

    - name: Upload firmware (Ult with 2IP With Reactivation SOCD) artifact
      uses: actions/upload-artifact@v4
      with:
        name: pico_rectangle_ult_2ip_with_reac_socd_${{ github.sha }}.uf2
        path: ${{ github.workspace }}/build/pico_rectangle_ULT_2IP_WITH_REAC.uf2
        if-no-files-found: error
        retention-days: 30

    - name: Upload firmware (Ult with Neutral SOCD) artifact
      uses: actions/upload-artifact@v4
      with:
        name: pico_rectangle_ult_neutral_socd_${{ github.sha }}.uf2
        path: ${{ github.workspace }}/build/pico_rectangle_ULT_NEUTRAL.uf2
        if-no-files-found: error
        retention-days: 30
